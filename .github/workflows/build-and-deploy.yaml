name: Build and Deploy (GHCR)

on:
  push:
    tags:
      - 'v*'
  repository_dispatch:
    types: [trigger-deploy]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set TAG from context
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "repository_dispatch" ]]; then
            echo "TAG=${{ github.event.client_payload.tag }}" >> $GITHUB_ENV
          else
            echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Debug - Show TAG
        run: echo "🏷️ TAG being used for build: $TAG"

      - name: Debug - Full image tag
        run: echo "🐳 Image to be built: ghcr.io/${{ github.repository }}:${{ env.TAG }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ env.TAG }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ env.TAG }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set TAG from context
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "repository_dispatch" ]]; then
            echo "TAG=${{ github.event.client_payload.tag }}" >> $GITHUB_ENV
          else
            echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Debug - Show TAG
        run: echo "📦 TAG being used for deployment: $TAG"

      - name: Debug - Full image tag
        run: echo "🚢 Image to deploy: ghcr.io/${{ github.repository }}:${{ env.TAG }}"

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/${{ github.repository }}:${{ env.TAG }}
            docker stop textloop-ui || true
            docker rm textloop-ui || true
            docker run -d --name textloop-ui -p 3000:3000 ghcr.io/${{ github.repository }}:${{ env.TAG }}
