name: Create Tag and Trigger Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release type: major, minor, or patch'
        required: true
        default: 'patch'

jobs:
  calculate-tag:
    name: Calculate next tag
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.bump.outputs.new_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get-latest-tag
        run: |
          tag=$(git tag --sort=-creatordate | grep '^v' | head -n 1)
          echo "Latest tag is $tag"
          echo "latest_tag=$tag" >> $GITHUB_OUTPUT

      - name: Bump tag
        id: bump
        run: |
          latest=${{ steps.get-latest-tag.outputs.latest_tag }}
          version_type="${{ github.event.inputs.version }}"
          echo "Bumping $version_type from $latest"

          if [[ -z "$latest" ]]; then
            new="v1.0.0"
          else
            version=${latest#v}
            IFS='.' read -r major minor patch <<< "$version"

            case "$version_type" in
              major)
                ((major++))
                minor=0
                patch=0
                ;;
              minor)
                ((minor++))
                patch=0
                ;;
              patch)
                ((patch++))
                ;;
              *)
                echo "❌ Invalid version type: $version_type"
                exit 1
                ;;
            esac

            new="v${major}.${minor}.${patch}"
          fi

          echo "New tag will be $new"
          echo "new_tag=$new" >> $GITHUB_OUTPUT

  tag-and-release:
    name: Create GitHub Tag and Release
    needs: calculate-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          prev_tag=$(git tag --sort=-creatordate | grep '^v' | head -n 1)
          echo "Previous tag: $prev_tag"

          git log "$prev_tag"..HEAD --pretty=format:"- %s" > changelog.txt || echo "No changes found."

          echo 'changelog<<EOF' >> $GITHUB_OUTPUT
          cat changelog.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Create and push new tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ needs.calculate-tag.outputs.new_tag }}
          git push origin ${{ needs.calculate-tag.outputs.new_tag }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.calculate-tag.outputs.new_tag }}
          name: Release ${{ needs.calculate-tag.outputs.new_tag }}
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger build-and-deploy workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-deploy
          client-payload: |
            {
              "tag": "${{ needs.calculate-tag.outputs.new_tag }}"
            }
